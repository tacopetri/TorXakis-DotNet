<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ output extension=".cs" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Text.RegularExpressions" #>
<#@ assembly name="$(TargetDir)\TorXakisDotNetAdapter.dll"#>
<#@ import namespace="TorXakisDotNetAdapter" #>
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Text.RegularExpressions;
using TorXakisDotNetAdapter.Refinement;

namespace TorXakisDotNetAdapter.Models
{
<#
    // Parse all model files inside the model directory.
    string projectName = Host.ResolveParameterValue("-", "-", "projects").Split('|')[1];
    DirectoryInfo modelDirectory= new DirectoryInfo(Path.Combine(Environment.CurrentDirectory, projectName, "Models"));
    TorXakisModelCollection modelCollection = new TorXakisModelCollection(modelDirectory);
    Dictionary<string, Dictionary<string, string>> actions = modelCollection.ParseActions();

    // Generate classes for all action types.
    foreach (KeyValuePair<string, Dictionary<string, string>> kvp1 in actions)
    {
#>
    /// <summary>Generated from TorXakis model.</summary>
	public sealed class <#=            kvp1.Key #> : ModelAction
	{
<#
        foreach (KeyValuePair<string, string> kvp2 in kvp1.Value)
        {
#>
        /// <summary>Generated from TorXakis model.</summary>
        public <#=                kvp2.Value.ToLower() #> <#=                kvp2.Key #>;
<#
        }
#>
	}

<#
    }
#>
}
