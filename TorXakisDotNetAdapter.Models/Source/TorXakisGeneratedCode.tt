<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ output extension=".cs" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Text.RegularExpressions" #>
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Text.RegularExpressions;

namespace TorXakisDotNetAdapter.Models
{
<#
    Dictionary<string, Dictionary<string, string>> actions = new Dictionary<string, Dictionary<string, string>>();

    // Parse all model files, generating strongly typed input and output classes.
    string projectName = Host.ResolveParameterValue("-", "-", "projects").Split('|')[1];
    DirectoryInfo modelDirectory= new DirectoryInfo(Path.Combine(Environment.CurrentDirectory, projectName, "Models"));
    foreach (FileInfo modelFile in modelDirectory.GetFiles("*.txs", SearchOption.AllDirectories))
    {
        string modelText = File.ReadAllText(modelFile.FullName);
        MatchCollection matches = Regex.Matches(modelText, @"TYPEDEF(.*?)ENDDEF");
        string bla = "Nope!";
#>
<#
    }
#>
    /// <summary>
    /// <#= modelDirectory #>
    /// </summary>
	public sealed class Generated
	{
  
	}
}
